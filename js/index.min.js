// "use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});//

// Variables
var isPlaying = true;
var intervalId;

// Function to start the timer
function startTimer() {
    intervalId = setInterval(function() {
    // Get the counter element
    var counterElement = document.getElementById("counter");
    // Get the current count
    var count = parseInt(counterElement.innerText);
    // Increase the count by 1
    counterElement.innerText = count + 1;
    }, 1000);
}
// Start counting
startTimer();

// Get elements
var minusButton = document.getElementById("minus");
var plusButton = document.getElementById("plus");
var heartButton = document.getElementById("heart");
var pauseButton = document.getElementById("pause");
var commentForm = document.getElementsByTagName("form")[0];

// Minus button
minusButton.addEventListener("click", function() {
    var counterElement = document.getElementById("counter");
    var count = parseInt(counterElement.innerText);
    counterElement.innerText = count - 1;
});
// Plus button
plusButton.addEventListener("click", function() {
    var counterElement = document.getElementById("counter");
    var count = parseInt(counterElement.innerText);
    counterElement.innerText = count + 1;
});
// Heart button
heartButton.addEventListener("click", function() {
    var counterElement = document.getElementById("counter");
    var count = parseInt(counterElement.innerText);
    var likesList = document.querySelector(".likes");
  // Find the existing like with the same count
    var existingLike = Array.prototype.slice.call(likesList.children).find(function(element) {
        return parseInt(element.dataset.num) === count;
    });
    if (existingLike) {
    // Increase the like count by 1
        var likeCountElement = existingLike.children[0];
        var likeCount = parseInt(likeCountElement.innerText);
        likeCountElement.innerText = likeCount + 1;
    } else {
    // Create a new like
    var newLikeElement = document.createElement("li");
    newLikeElement.dataset.num = count;
    newLikeElement.innerHTML = count + " has been liked <span>1</span> time";
    likesList.appendChild(newLikeElement);
    }
});
// Pause button
pauseButton.addEventListener("click", function() {
    if (isPlaying) {
    // Stop the timer
        isPlaying = false;
        clearInterval(intervalId);
        pauseButton.innerText = "resume";
    } else {
    // Start the timer
        isPlaying = true;
        startTimer();
        pauseButton.innerText = "pause";
    }
  // Disable all buttons except the pause button
    Array.prototype.forEach.call(document.getElementsByTagName("button"), function(button) {
    if (button.id !== "pause") {
        button.disabled = !isPlaying;
        }
    });
});
// Comment form
commentForm.addEventListener("submit", function(e) {
    e.preventDefault();
  // Get the comment input
    var commentInput = this.children[0];
  // Get the comment text
    var commentText = commentInput.value;
  // Clear the comment input
    commentInput.value = "";
    var commentsList = document.querySelector(".comments");
  //new comment
    var newCommentElement = document.createElement("p");
    newCommentElement.innerText = commentText;
  // Add the new comment to the comments list
    commentsList.appendChild(newCommentElement);
});
